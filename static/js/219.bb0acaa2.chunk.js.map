{"version":3,"file":"static/js/219.bb0acaa2.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","hooks/useRequest.js","services/api.js","services/utils.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  padding: 20px 20px;\n`;\n\nexport const CastList = styled.ul`\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  list-style: disc;\n`;\n\nexport const CastItem = styled.li`\n  padding: 5px 5px;\n\n  & > img {\n    width: 150px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ActorName = styled.p`\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n`;\n","import { useParams } from 'react-router-dom';\nimport { Layout, CastList, CastItem, ActorName } from './Cast.styled';\nimport { useRequest } from 'hooks/useRequest';\nimport { generateUrl } from 'services/utils';\nimport { searchMovieCast } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, error] = useRequest(searchMovieCast, movieId);\n\n  return (\n    <Layout>\n      {error && <p>{error}</p>}\n      {movieCast?.length === 0 && (\n        <p>We didn't find any actors for this movie.</p>\n      )}\n      {movieCast?.length > 0 && (\n        <CastList>\n          {movieCast.map(\n            ({ id, profile_path, original_name, name, character }) => {\n              return (\n                <CastItem key={id}>\n                  <img src={generateUrl(profile_path)} alt={original_name} />\n                  <ActorName>{name}</ActorName>\n                  <p>Character: {character}</p>\n                </CastItem>\n              );\n            }\n          )}\n        </CastList>\n      )}\n    </Layout>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\n\nexport const useRequest = (httpRequestFunction, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchInfo = async () => {\n      if (param === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        setData(await httpRequestFunction(param, controller.signal));\n      } catch (e) {\n        // console.log(e.message === 'canceled' && e.config.signal.aborted);\n        if (e.code === 'ERR_CANCELED') return;\n        setError('Sorry, something went wrong. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInfo();\n\n    return () => {\n      controller.abort();\n    };\n  }, [httpRequestFunction, param]);\n\n  return [data, error, isLoading];\n};\n","import axios from 'axios';\n\nconst API_KEY = 'a97f5a48286213b4292b81d1cb5cf0d2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchPopularMovies = async (params = {}, signal) => {\n  console.log(signal);\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: API_KEY,\n      ...params,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByQuery = async (searchQuery, signal) => {\n  const response = await axios.get('search/movie', {\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovieCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n","export const generateUrl = path => {\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n  return path ? imageUrl + path : 'https://i.postimg.cc/L8fCW6RZ/repetajpg.jpg';\n};\n"],"names":["Layout","styled","p","theme","space","CastList","CastItem","ActorName","fontWeights","semiBold","movieId","useParams","useRequest","searchMovieCast","movieCast","error","length","map","id","profile_path","original_name","name","character","src","generateUrl","alt","httpRequestFunction","param","useState","data","setData","setError","isLoading","setIsLoading","useEffect","controller","AbortController","fetchInfo","signal","code","abort","API_KEY","axios","searchPopularMovies","params","console","log","page","api_key","response","results","searchMoviesByQuery","searchQuery","query","searchMoviesDetails","cast","searchMovieReviews","path"],"sourceRoot":""}