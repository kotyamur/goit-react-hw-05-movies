{"version":3,"file":"static/js/806.f796043e.chunk.js","mappings":"mOAEaA,EAASC,EAAAA,GAAAA,IAAH,2GAGV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIGC,EAAaJ,EAAAA,GAAAA,GAAH,6HAId,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIGE,EAAaL,EAAAA,GAAAA,GAAH,sEAEJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPG,EAAcN,EAAAA,GAAAA,EAAH,sEAEL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,kBCOpB,EA3BgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,GAAW,qBAAsBF,GAA/D,eAAOG,EAAP,KAAqBC,EAArB,KAEA,OACE,UAACZ,EAAD,WACGY,IAAS,uBAAIA,IACY,KAAb,OAAZD,QAAY,IAAZA,OAAA,EAAAA,EAAcE,UACb,sEAEW,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcE,QAAS,IACtB,SAACR,EAAD,UACGM,EAAaG,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,UAACX,EAAD,YACE,UAACC,EAAD,sBAAsBS,MACtB,uBAAIC,MAFWF,EAKpB,QAKV,C,uUC3BKG,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,GAAAA,IAAU,qBAAsB,CAErDE,OAAQ,CACNC,KAAM,EACNC,QAASL,KALoB,cAC3BM,EAD2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,qDAWnBC,EAAmB,mCAAG,WAAOC,GAAP,4FAAoBN,EAApB,+BAA2B,EAA3B,SACVH,EAAAA,GAAAA,IAAU,eAAgB,CAC/CE,OAAQ,CACNC,KAAMA,EACNO,MAAOD,EACPL,QAASL,KALoB,cAC3BM,EAD2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,sDAWnBI,EAAmB,mCAAG,WAAMtB,GAAN,uFACVW,EAAAA,GAAAA,IAAA,gBAAmBX,GAAW,CACnDa,OAAQ,CACNE,QAASL,KAHoB,cAC3BM,EAD2B,yBAM1BA,EAASC,MANiB,2CAAH,sDASnBM,EAAe,mCAAG,WAAMvB,GAAN,uFACNW,EAAAA,GAAAA,IAAA,gBAAmBX,EAAnB,YAAsC,CAC3Da,OAAQ,CACNE,QAASL,KAHgB,cACvBM,EADuB,yBAMtBA,EAASC,KAAKO,MANQ,2CAAH,sDASfC,EAAkB,mCAAG,WAAMzB,GAAN,uFACTW,EAAAA,GAAAA,IAAA,gBAAmBX,EAAnB,YAAsC,CAC3Da,OAAQ,CACNE,QAASL,KAHmB,cAC1BM,EAD0B,yBAMzBA,EAASC,KAAKC,SANW,2CAAH,sD,SC7ClBhB,EAAa,SAACwB,EAAUC,GACnC,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOX,EAAP,KAAaY,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOxB,EAAP,KAAc0B,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,iFACF,KAAVP,EADY,wDAIhBK,GAAa,GAJG,cAMdH,EANc,SAMAM,EAAIT,GAAUC,GANd,oFAQdG,EAAS,wDARK,yBAUdE,GAAa,GAVC,6EAAH,qDAcfE,GACD,GAAE,CAACR,EAAUC,IAEP,CAACV,EAAMb,EAAO2B,EACtB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","api.js","hooks/useRequest.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  padding: 20px 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: disc;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 5px 5px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const ReviewAvtor = styled.p`\n  font-weight: 500;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { Layout, ReviewList, ReviewItem, ReviewAvtor } from './Reviews.styled';\nimport { useRequest } from 'hooks/useRequest';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [movieReviews, error] = useRequest('searchMovieReviews', movieId);\n\n  return (\n    <Layout>\n      {error && <p>{error}</p>}\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n      {movieReviews?.length > 0 && (\n        <ReviewList>\n          {movieReviews.map(({ id, author, content }) => {\n            return (\n              <ReviewItem key={id}>\n                <ReviewAvtor>Author: {author}</ReviewAvtor>\n                <p>{content}</p>\n              </ReviewItem>\n            );\n          })}\n        </ReviewList>\n      )}\n    </Layout>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a97f5a48286213b4292b81d1cb5cf0d2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export const controller = new AbortController();\n\nexport const searchPopularMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    // signal: controller.signal,\n    params: {\n      page: 1,\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByQuery = async (searchQuery, page = 1) => {\n  const response = await axios.get('search/movie', {\n    params: {\n      page: page,\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n","import * as api from 'api';\nimport { useState, useEffect } from 'react';\n\nexport const useRequest = (funcName, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      if (param === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        setData(await api[funcName](param));\n      } catch (e) {\n        setError('Sorry, something went wrong. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInfo();\n  }, [funcName, param]);\n\n  return [data, error, isLoading];\n};\n"],"names":["Layout","styled","p","theme","space","ReviewList","ReviewItem","ReviewAvtor","movieId","useParams","useRequest","movieReviews","error","length","map","id","author","content","API_KEY","axios","searchPopularMovies","params","page","api_key","response","data","results","searchMoviesByQuery","searchQuery","query","searchMoviesDetails","searchMovieCast","cast","searchMovieReviews","funcName","param","useState","setData","setError","isLoading","setIsLoading","useEffect","fetchInfo","api"],"sourceRoot":""}