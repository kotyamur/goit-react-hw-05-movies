{"version":3,"file":"static/js/526.f29bd0b4.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","hooks/useRequest.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Layout = styled.ul`\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: disc;\n`;\n\nexport const Text = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Layout, Text } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Layout>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Text>{title}</Text>\n          </Link>\n        </li>\n      ))}\n    </Layout>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nexport const useRequest = (httpRequestFunction, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchInfo = async () => {\n      if (param === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        setData(await httpRequestFunction(param, controller.signal));\n      } catch (e) {\n        // console.log(e.message === 'canceled' && e.config.signal.aborted);\n        if (e.code === 'ERR_CANCELED') return;\n        setError('Sorry, something went wrong. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInfo();\n\n    return () => {\n      controller.abort();\n    };\n  }, [httpRequestFunction, param]);\n\n  return [data, error, isLoading];\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.main`\n  padding: 0 20px;\n`;\n\nexport const Header = styled.h1`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useRequest } from 'hooks/useRequest';\nimport { searchPopularMovies } from 'services/api';\nimport { Layout, Header } from './Home.styled';\n\nconst Home = () => {\n  const [movies, error, isLoading] = useRequest(searchPopularMovies);\n\n  return (\n    <Layout>\n      <Header>Trending today</Header>\n      <Loader isLoading={isLoading} />\n      {error && <p>{error}</p>}\n      {movies && <MoviesList movies={movies} />}\n    </Layout>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'a97f5a48286213b4292b81d1cb5cf0d2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchPopularMovies = async (params = {}, signal) => {\n  console.log(signal);\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: API_KEY,\n      ...params,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByQuery = async (searchQuery, signal) => {\n  const response = await axios.get('search/movie', {\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovieCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n"],"names":["Layout","styled","p","theme","space","Text","fontSizes","m","MoviesList","movies","location","useLocation","map","id","title","to","state","from","useRequest","httpRequestFunction","param","useState","data","setData","error","setError","isLoading","setIsLoading","useEffect","controller","AbortController","fetchInfo","signal","code","abort","Header","searchPopularMovies","Loader","API_KEY","axios","params","console","log","page","api_key","response","results","searchMoviesByQuery","searchQuery","query","searchMoviesDetails","movieId","searchMovieCast","cast","searchMovieReviews"],"sourceRoot":""}