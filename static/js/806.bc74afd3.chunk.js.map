{"version":3,"file":"static/js/806.bc74afd3.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,GAAAA,IAAU,qBAAsB,CAErDE,OAAQ,CACNC,KAAM,EACNC,QAASL,KALoB,cAC3BM,EAD2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,qDAWnBC,EAAmB,mCAAG,WAAOC,GAAP,4FAAoBN,EAApB,+BAA2B,EAA3B,SACVH,EAAAA,GAAAA,IAAU,eAAgB,CAC/CE,OAAQ,CACNC,KAAMA,EACNO,MAAOD,EACPL,QAASL,KALoB,cAC3BM,EAD2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,sDAWnBI,EAAmB,mCAAG,WAAMC,GAAN,uFACVZ,EAAAA,GAAAA,IAAA,gBAAmBY,GAAW,CACnDV,OAAQ,CACNE,QAASL,KAHoB,cAC3BM,EAD2B,yBAM1BA,EAASC,MANiB,2CAAH,sDASnBO,EAAe,mCAAG,WAAMD,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,YAAsC,CAC3DV,OAAQ,CACNE,QAASL,KAHgB,cACvBM,EADuB,yBAMtBA,EAASC,KAAKQ,MANQ,2CAAH,sDASfC,EAAkB,mCAAG,WAAMH,GAAN,uFACTZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,YAAsC,CAC3DV,OAAQ,CACNE,QAASL,KAHmB,cAC1BM,EAD0B,yBAMzBA,EAASC,KAAKC,SANW,2CAAH,qD,gKC9ClBS,EAASC,EAAAA,GAAAA,IAAH,yGAONC,EAAaD,EAAAA,GAAAA,GAAH,4HAQVE,EAAaF,EAAAA,GAAAA,GAAH,qEAKVG,EAAcH,EAAAA,GAAAA,EAAH,qE,SCwBxB,EAzCgB,WACd,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAmBR,OAjBAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEIb,EAAAA,EAAAA,IAAmBH,GAFvB,OAEhBiB,EAFgB,OAGtBN,EAAgBM,GAChBJ,EACyB,IAAvBI,EAAYC,OACR,4CACA,MAPgB,gDAUtBL,EAAS,6CAVa,yDAAH,qDAavBG,GACD,GAAE,CAAChB,KAGF,UAACI,EAAD,WACGQ,IAAS,uBAAIA,IACbF,EAAaQ,OAAS,IACrB,SAACZ,EAAD,UACGI,EAAaS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,UAACf,EAAD,YACE,UAACC,EAAD,sBAAsBa,MACtB,uBAAIC,MAFWF,EAKpB,QAKV,C","sources":["api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a97f5a48286213b4292b81d1cb5cf0d2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export const controller = new AbortController();\n\nexport const searchPopularMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    // signal: controller.signal,\n    params: {\n      page: 1,\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByQuery = async (searchQuery, page = 1) => {\n  const response = await axios.get('search/movie', {\n    params: {\n      page: page,\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 20px 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: disc;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 5px 5px;\n  margin-bottom: 12px;\n`;\n\nexport const ReviewAvtor = styled.p`\n  font-weight: 500;\n  margin-bottom: 12px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { searchMovieReviews } from 'api';\nimport { Layout, ReviewList, ReviewItem, ReviewAvtor } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const filmReviews = await searchMovieReviews(movieId);\n        setMovieReviews(filmReviews);\n        setError(\n          filmReviews.length === 0\n            ? \"We don't have any reviews for this movie.\"\n            : null\n        );\n      } catch (e) {\n        setError(\"We don't have any reviews for this movie.\");\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <Layout>\n      {error && <p>{error}</p>}\n      {movieReviews.length > 0 && (\n        <ReviewList>\n          {movieReviews.map(({ id, author, content }) => {\n            return (\n              <ReviewItem key={id}>\n                <ReviewAvtor>Author: {author}</ReviewAvtor>\n                <p>{content}</p>\n              </ReviewItem>\n            );\n          })}\n        </ReviewList>\n      )}\n    </Layout>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","searchPopularMovies","params","page","api_key","response","data","results","searchMoviesByQuery","searchQuery","query","searchMoviesDetails","movieId","searchMovieCast","cast","searchMovieReviews","Layout","styled","ReviewList","ReviewItem","ReviewAvtor","useState","movieReviews","setMovieReviews","error","setError","useParams","useEffect","fetchMovieReviews","filmReviews","length","map","id","author","content"],"sourceRoot":""}