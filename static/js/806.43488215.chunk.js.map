{"version":3,"file":"static/js/806.43488215.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","hooks/useRequest.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  padding: 20px 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: disc;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 5px 5px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const ReviewAvtor = styled.p`\n  font-weight: 500;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { Layout, ReviewList, ReviewItem, ReviewAvtor } from './Reviews.styled';\nimport { useRequest } from 'hooks/useRequest';\nimport { searchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [movieReviews, error] = useRequest(searchMovieReviews, movieId);\n\n  return (\n    <Layout>\n      {error && <p>{error}</p>}\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n      {movieReviews?.length > 0 && (\n        <ReviewList>\n          {movieReviews.map(({ id, author, content }) => {\n            return (\n              <ReviewItem key={id}>\n                <ReviewAvtor>Author: {author}</ReviewAvtor>\n                <p>{content}</p>\n              </ReviewItem>\n            );\n          })}\n        </ReviewList>\n      )}\n    </Layout>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\n\nexport const useRequest = (httpRequestFunction, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchInfo = async () => {\n      if (param === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        setData(await httpRequestFunction(param, controller.signal));\n      } catch (e) {\n        // console.log(e.message === 'canceled' && e.config.signal.aborted);\n        if (e.code === 'ERR_CANCELED') return;\n        setError('Sorry, something went wrong. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInfo();\n\n    return () => {\n      controller.abort();\n    };\n  }, [httpRequestFunction, param]);\n\n  return [data, error, isLoading];\n};\n","import axios from 'axios';\n\nconst API_KEY = 'a97f5a48286213b4292b81d1cb5cf0d2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchPopularMovies = async (params = {}, signal) => {\n  console.log(signal);\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: API_KEY,\n      ...params,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByQuery = async (searchQuery, signal) => {\n  const response = await axios.get('search/movie', {\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovieCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n"],"names":["Layout","styled","p","theme","space","ReviewList","ReviewItem","ReviewAvtor","movieId","useParams","useRequest","searchMovieReviews","movieReviews","error","length","map","id","author","content","httpRequestFunction","param","useState","data","setData","setError","isLoading","setIsLoading","useEffect","controller","AbortController","fetchInfo","signal","code","abort","API_KEY","axios","searchPopularMovies","params","console","log","page","api_key","response","results","searchMoviesByQuery","searchQuery","query","searchMoviesDetails","searchMovieCast","cast"],"sourceRoot":""}