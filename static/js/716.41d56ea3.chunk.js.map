{"version":3,"file":"static/js/716.41d56ea3.chunk.js","mappings":"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","sources":["hooks/useRequest.js","pages/MovieDetails/MovieDetails.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","components/NavToAdditionalInfo/NavToAdditionalInfo.styled.js","components/NavToAdditionalInfo/NavToAdditionalInfo.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","pages/MovieDetails/MovieDetails.js","services/api.js","services/utils.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useRequest = (httpRequestFunction, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchInfo = async () => {\n      if (param === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        setData(await httpRequestFunction(param, controller.signal));\n      } catch (e) {\n        // console.log(e.message === 'canceled' && e.config.signal.aborted);\n        if (e.code === 'ERR_CANCELED') return;\n        setError('Sorry, something went wrong. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInfo();\n\n    return () => {\n      controller.abort();\n    };\n  }, [httpRequestFunction, param]);\n\n  return [data, error, isLoading];\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  gap: ${p => p.theme.space[4]}px;\n\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: 20px 20px;\n  box-shadow: 0px 6px 5px -4px rgb(0 0 0 / 55%);\n`;\n\nexport const FilmImage = styled.img`\n  width: 300px;\n`;\n\nexport const FilmInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  width: 1000px;\n  padding: 8px 4px;\n`;\n\nexport const FilmTitle = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Heading = styled.p`\n  font-size: 20px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n`;\n","import PropTypes from 'prop-types';\nimport { generateUrl } from 'services/utils';\nimport {\n  FilmInfo,\n  Layout,\n  FilmImage,\n  Heading,\n  FilmTitle,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movie }) => {\n  const {\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <Layout>\n      <FilmImage src={generateUrl(poster_path)} alt={original_title} />\n      <FilmInfo>\n        <FilmTitle>\n          {title} ({String(release_date).slice(0, 4)})\n        </FilmTitle>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <Heading>Overviev</Heading>\n        <p>{overview}</p>\n        <Heading>Genres</Heading>\n        <p>{genres.map(genre => genre.name).join(' ')}</p>\n      </FilmInfo>\n    </Layout>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  padding: 20px 20px;\n  box-shadow: 0px 6px 5px -4px rgb(0 0 0 / 55%);\n`;\n\nexport const InfoTitle = styled.p`\n  font-size: 20px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  margin-bottom: 12px;\n`;\n\nexport const InfoList = styled.ul`\n  font-size: 20px;\n  list-style: disc;\n  padding: 0 20px;\n`;\n\nexport const InfoItem = styled.li`\n  font-size: 20px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Layout, InfoTitle, InfoList } from './NavToAdditionalInfo.styled';\n\nexport const NavToAdditionalInfo = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <Layout>\n      <InfoTitle>Additional information</InfoTitle>\n      <InfoList>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </InfoList>\n    </Layout>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n  padding: 8px 20px;\n  color: ${p => p.theme.colors.black};\n  text-decoration: none;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  text-transform: uppercase;\n\n  :hover {\n    color: ${p => p.theme.colors.orange};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsArrowLeftSquareFill } from 'react-icons/bs';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftSquareFill size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import { Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Layout } from './MovieDetails.styled';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { NavToAdditionalInfo } from 'components/NavToAdditionalInfo/NavToAdditionalInfo';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Loader } from 'components/Loader/Loader';\nimport { useRequest } from 'hooks/useRequest';\nimport { searchMoviesDetails } from 'services/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, error, isLoading] = useRequest(searchMoviesDetails, movieId);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <main>\n      <Loader isLoading={isLoading} />\n      {error && <p>{error}</p>}\n      {movie && (\n        <Layout>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <MovieInfo movie={movie} />\n          <NavToAdditionalInfo />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Layout>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a97f5a48286213b4292b81d1cb5cf0d2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchPopularMovies = async (params = {}, signal) => {\n  console.log(signal);\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: API_KEY,\n      ...params,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByQuery = async (searchQuery, signal) => {\n  const response = await axios.get('search/movie', {\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovieCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data.results;\n};\n","export const generateUrl = path => {\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n  return path ? imageUrl + path : 'https://i.postimg.cc/L8fCW6RZ/repetajpg.jpg';\n};\n"],"names":["useRequest","httpRequestFunction","param","useState","data","setData","error","setError","isLoading","setIsLoading","useEffect","controller","AbortController","fetchInfo","signal","code","abort","Layout","styled","p","theme","space","FilmImage","FilmInfo","FilmTitle","fontSizes","l","fontWeights","semiBold","Heading","MovieInfo","movie","poster_path","original_title","title","release_date","vote_average","overview","genres","src","generateUrl","alt","String","slice","Math","round","map","genre","name","join","InfoTitle","InfoList","NavToAdditionalInfo","backLinkHref","useLocation","state","from","to","StyledLink","Link","colors","black","orange","BackLink","children","size","movieId","useParams","searchMoviesDetails","Loader","Suspense","fallback","API_KEY","axios","searchPopularMovies","params","console","log","page","api_key","response","results","searchMoviesByQuery","searchQuery","query","searchMovieCast","cast","searchMovieReviews","path"],"sourceRoot":""}